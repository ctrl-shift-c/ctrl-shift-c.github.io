<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何创建hexo</title>
      <link href="/2019/09/22/hexo/"/>
      <url>/2019/09/22/hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="一：在本地创建hexo"><a href="#一：在本地创建hexo" class="headerlink" title="一：在本地创建hexo"></a>一：在本地创建hexo</h2><ol><li>在本地创建hexo文件夹</li><li>然后进入这个新建的文件夹右键右键选择Git Bash Here</li><li>在git命令行中输入<ol><li>npm install -g hexo</li><li>hexo init</li><li>npm install</li><li>npm install hexo-deployer-git –save</li><li>hexo s</li><li>hexo g</li><li>hexo d</li></ol></li></ol><hr><a id="more"></a><p>** 注意前期执行到第5不即可</p><ol><li>当输入hexo s 后会停止，提示你输入ctrl+C退出</li><li>输入<a href="http://localhost:4000/如果显示界面证明配置成功" target="_blank" rel="noopener">http://localhost:4000/如果显示界面证明配置成功</a></li><li>Ctrl+C退出</li><li>如果没有界面显示删除文件夹继续上述步骤直到成功</li></ol><hr><h2 id="二：修改本站配置文件"><a href="#二：修改本站配置文件" class="headerlink" title="二：修改本站配置文件"></a>二：修改本站配置文件</h2><ol><li>修改该文键夹下_config.yml的内容<br>deploy:<br>type: git<br>repository: <a href="https://github.com/ctrl-shift-c/ctrl-shift-c.github.io.git" target="_blank" rel="noopener">https://github.com/ctrl-shift-c/ctrl-shift-c.github.io.git</a><br>branch: master</li></ol><hr><h2 id="注：repository-去你的Github主页点击你建的那个XXXX-github-io那个库然后将连接复制即可（与复制别人库的链接相似）"><a href="#注：repository-去你的Github主页点击你建的那个XXXX-github-io那个库然后将连接复制即可（与复制别人库的链接相似）" class="headerlink" title="*** 注：repository: 去你的Github主页点击你建的那个XXXX.github.io那个库然后将连接复制即可（与复制别人库的链接相似）"></a>*** 注：repository: 去你的Github主页点击你建的那个XXXX.github.io那个库然后将连接复制即可（与复制别人库的链接相似）</h2><h2 id="三：引入主题"><a href="#三：引入主题" class="headerlink" title="三：引入主题"></a>三：引入主题</h2><ol><li>引入主题修饰界面</li><li>建议使用<a href="https://github.com/theme-next/hexo-theme-next" title="next主题" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a></li><li>进入之前创建的hexo文件夹右键执行git命令行输入：<ol><li>git clone <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next</a> themes/next</li><li>修改之前那个_config.yml的内容</li><li>theme: next（直接找到theme:然后更改内容为next）</li><li>hexo s(查看效果，看是否引入成功）</li><li>Ctrl+C退出</li></ol></li></ol><hr><p>*** 注：</p><ol><li>我的所有配置都是基于这个主题的因为这个主题集成了很多插件因此比较方便配置许多东西</li><li>在hexo_config.yml我称为本地配置</li><li>在hexos\themes\next/_config.yml我称为主题配置</li><li>在配置过程中建议每添加一次验证一次即hexo s看看是否出错以及是否有效果</li></ol><hr><h2 id="四：修饰主题"><a href="#四：修饰主题" class="headerlink" title="四：修饰主题"></a>四：修饰主题</h2><ol><li>添加menu<ol><li>打开主题配置修改menu:<br><code>menu:home: / || homeabout: /about/ || usertags: /tags/ || tagscategories: /categories/ || tharchives: /archives/ || archive#schedule: /schedule/ || calendar#sitemap: /sitemap.xml || sitemap#commonweal: /404/ || heartbeat</code></li><li>打开hexo右键git输入：<ol><li>hexo new page “tags”</li><li>hexo new page “about”</li><li>hexo new page “categories”</li></ol></li><li>进入XX:\hexos\source<ol><li>发现多出三个文件夹tags,about,categories</li><li>打开tags文件夹,点击修改index.md<br>`—<br>title: tags<br>date: 2019-09-24 07:07:45<br>type: tags</li></ol></li></ol></li></ol><p>—<code>3. 打开about文件夹,点击修改index.md</code>—<br>title: about<br>date: 2019-09-24 07:07:59<br>type: about<br>—<code>4. 打开categories文件夹,点击修改index.md</code>—<br>title: categories<br>date: 2019-09-24 07:08:10<br>type: categories<br>—`</p><ol start="2"><li>添加搜索<ol><li>打开hexo文件夹右键git输入<br><code>npm install hexo-generator-searchdb --save</code></li><li>在主题配置里搜索local_search:修改enable为true<br> <code>local_search:enable: true</code></li></ol></li></ol><hr><p>*** 注：最新版的next不用在本地配置添加<br>    <code>search:  path: search.xml  field: post  format: html  limit: 10000</code></p>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git快捷键输入Shift+Insert </tag>
            
            <tag> git可以上下选择以前输入过的 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最全最简单的hexo创键美化教程</title>
      <link href="/2019/09/22/hexos/"/>
      <url>/2019/09/22/hexos/</url>
      
        <content type="html"><![CDATA[<h2 id="一：在本地创建hexo"><a href="#一：在本地创建hexo" class="headerlink" title="一：在本地创建hexo"></a>一：在本地创建hexo</h2><ol><li>在本地创建hexo文件夹</li><li>然后进入这个新建的文件夹右键右键选择Git Bash Here</li><li>在git命令行中输入<ol><li>npm install -g hexo</li><li>hexo init</li><li>npm install</li><li>npm install hexo-deployer-git –save</li><li>hexo s</li><li>hexo g</li><li>hexo d</li></ol></li></ol><hr><p>** 注意前期执行到第5不即可<br>**    1. 当输入hexo s 后会停止，提示你输入ctrl+C退出<br>**    2. 输入<a href="http://localhost:4000/如果显示界面证明配置成功" target="_blank" rel="noopener">http://localhost:4000/如果显示界面证明配置成功</a><br>**    3. Ctrl+C退出</p><h2 id="4-如果没有界面显示删除文件夹继续上述步骤直到成功"><a href="#4-如果没有界面显示删除文件夹继续上述步骤直到成功" class="headerlink" title="**    4. 如果没有界面显示删除文件夹继续上述步骤直到成功"></a>**    4. 如果没有界面显示删除文件夹继续上述步骤直到成功</h2><a id="more"></a><h2 id="二：修改本站配置文件"><a href="#二：修改本站配置文件" class="headerlink" title="二：修改本站配置文件"></a>二：修改本站配置文件</h2><ol><li>修改该文键夹下_config.yml的内容<pre><code>deploy:type: gitrepository: https://github.com/ctrl-shift-c/ctrl-shift-c.github.io.gitbranch: master</code></pre></li></ol><hr><h2 id="注：repository-去你的Github主页点击你建的那个XXXX-github-io那个库然后将连接复制即可（与复制别人库的链接相似）"><a href="#注：repository-去你的Github主页点击你建的那个XXXX-github-io那个库然后将连接复制即可（与复制别人库的链接相似）" class="headerlink" title="** 注：repository: 去你的Github主页点击你建的那个XXXX.github.io那个库然后将连接复制即可（与复制别人库的链接相似）"></a>** 注：repository: 去你的Github主页点击你建的那个XXXX.github.io那个库然后将连接复制即可（与复制别人库的链接相似）</h2><h2 id="三：引入主题"><a href="#三：引入主题" class="headerlink" title="三：引入主题"></a>三：引入主题</h2><ol><li>引入主题修饰界面</li><li>建议使用<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">next主题</a></li><li>进入之前创建的hexo文件夹右键执行git命令行输入：<ol><li><pre><code>git clone https://github.com/theme-next/hexo-theme-next themes/next</code></pre></li><li>修改之前那个_config.yml的内容</li><li>theme: next（直接找到theme:然后更改内容为next）</li><li><code>hexo s</code>(查看效果，看是否引入成功）</li><li>Ctrl+C退出</li></ol></li></ol><hr><p>** 注：<br>**    1. 我的所有配置都是基于这个主题的因为这个主题集成了很多插件因此比较方便配置许多东西<br>**    2. 在hexo_config.yml我称为本地配置<br>**    3. 在hexos\themes\next/_config.yml我称为主题配置</p><h2 id="4-在配置过程中建议每添加一次验证一次即hexo-s看看是否出错以及是否有效果"><a href="#4-在配置过程中建议每添加一次验证一次即hexo-s看看是否出错以及是否有效果" class="headerlink" title="**    4. 在配置过程中建议每添加一次验证一次即hexo s看看是否出错以及是否有效果"></a>**    4. 在配置过程中建议每添加一次验证一次即<code>hexo s</code>看看是否出错以及是否有效果</h2><h2 id="四：修饰主题"><a href="#四：修饰主题" class="headerlink" title="四：修饰主题"></a>四：修饰主题</h2><ol><li>添加menu<ol><li>打开主题配置修改menu:<br><code>menu:home: / || homeabout: /about/ || usertags: /tags/ || tagscategories: /categories/ || tharchives: /archives/ || archive#schedule: /schedule/ || calendar#sitemap: /sitemap.xml || sitemap#commonweal: /404/ || heartbeat</code></li><li>打开hexo右键git输入：<ol><li><code>hexo new page &quot;tags&quot;</code></li><li><code>hexo new page &quot;about&quot;</code></li><li><code>hexo new page &quot;categories&quot;</code></li></ol></li><li>进入XX:\hexos\source<ol><li>发现多出三个文件夹tags,about,categories</li><li>打开tags文件夹,点击修改index.md<br>```—<br>title: tags<br>date: 2019-09-24 07:07:45<br>type: tags</li></ol></li></ol></li></ol><p>—```<br>        3. 打开about文件夹,点击修改index.md</p><pre class=" language----"><code class="language----">title: aboutdate: 2019-09-24 07:07:59type: about---```        4. 打开categories文件夹,点击修改index.md    ```---title: categoriesdate: 2019-09-24 07:08:10type: categories---```2. 添加搜索    1. 打开hexo文件夹右键git输入    ``` npm install hexo-generator-searchdb --save```    2. 在主题配置里搜索local_search:修改enable为true        ```local_search:  enable: true```---**注：最新版的next不用在本地配置添加    ```search:  path: search.xml  field: post  format: html  limit: 10000```3. 添加自己的链接social    1. 主题配置搜索    2. 格式：社交平台名称：链接 || 图标    3. 然后添加自己需要的    例：</code></pre><pre><code>social: GitHub: https://github.com/ctrl-shift-c || github#GitHub: https://github.com/yourname || github  #E-Mail: mailto:yourname@gmail.com || envelope  #Weibo: https://weibo.com/yourname || weibo</code></pre><pre><code>4. 添加友情链接    1. 主题文件搜索# Blog rolls    2. 修改内容</code></pre><h1 id="Blog-rolls"><a href="#Blog-rolls" class="headerlink" title="Blog rolls"></a>Blog rolls</h1><p>links_settings:<br>  icon: link<br>  title: 友情帮助</p><h1 id="Available-values-block-inline"><a href="#Available-values-block-inline" class="headerlink" title="Available values: block | inline"></a>Available values: block | inline</h1><p>  layout: block<br>links:</p><p>  #Title: <a href="http://example.com" target="_blank" rel="noopener">http://example.com</a><br>  帮助: <a href="https://www.baidu.com`" target="_blank" rel="noopener">https://www.baidu.com`</a></p><pre><code>5. 改变超链接颜色，区分开超链接与文字    1. 找到XXX:\hexos\themes\next\source\css\_common\components\post里的post.styl进行修改    2. 在文件末尾添加如何内容</code></pre><p>.post-body p a{<br>  color: #0593d3;<br>  border-bottom: none;<br>  &amp;:hover {<br>    color: #0477ab;<br>    text-decoration: underline;<br>  }<br>}</p><pre><code>6. 文章末尾添加结尾    1. 找到XXX:\hexos\themes\next\layout\_macro    2. 新建一个passage-end-tag.swig添加</code></pre><pre><code>    3. 找到XXX:\hexos\themes\next\layout\_macro里的post.swig,在&quot;post-footer&quot;前边的位置填入</code></pre>{% if not is_index %}  <div>{% include 'passage-end-tag.swig' %}  </div>{% endif %}`<pre><code>    3. 在主题配置最后添加</code></pre><p>passage_end_tag:<br>enabled: true</p><pre><code>7. 显示每篇字数    1. 打开hexo文件夹右键git输入    2. ```npm install hexo-symbols-count-time --save```        3. 在本地配置添加如何内容</code></pre><p>symbols_count_time:<br>  symbols: true                # 文章字数统计<br>  time: true                   # 文章阅读时长<br>  total_symbols: true          # 站点总字数统计<br>  total_time: true             # 站点总阅读时长<br>  exclude_codeblock: false     # 排除代码字数统计</p><pre><code>    4. 在主题配置里搜索symbols_count_time，按照这个修改</code></pre><p>symbols_count_time:<br>  separated_meta: true<br>  item_text_post: true<br>  item_text_total: true<br>  awl: 4<br>  wpm: 275</p><pre><code>8. 主题配置文件搜索footer(主题里的底部小人跳动)    1. ```animated: true```9. 版权配置    1. 主题配置搜索creative_commons进行修改 </code></pre><p>creative_commons:<br>  license: by-nc-nd<br>  post: true<br>  language: deed.zh</p><pre><code>10. 界面加载进度条    1. $ ```git clone https://github.com/theme-next/theme-next-pace source/lib/pace```    2. 主题配置文件搜索pace进行修改</code></pre><p>pace:<br>  enable: true</p><h1 id="Themes-list"><a href="#Themes-list" class="headerlink" title="Themes list:"></a>Themes list:</h1><h1 id="big-counter-bounce-barber-shop-center-atom-center-circle-center-radar-center-simple"><a href="#big-counter-bounce-barber-shop-center-atom-center-circle-center-radar-center-simple" class="headerlink" title="big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple"></a>big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</h1><h1 id="corner-indicator-fill-left-flat-top-flash-loading-bar-mac-osx-material-minimal"><a href="#corner-indicator-fill-left-flat-top-flash-loading-bar-mac-osx-material-minimal" class="headerlink" title="corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal"></a>corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</h1><p>  theme: minimal</p><pre><code>11. 博客访问量统计    1. 主题配置文件搜索busuanzi_count:    2. ```enable: true```12. 实现fork me on github    1. [条形](http://tholman.com/github-corners/)    2. [图案](https://github.blog/2008-12-19-github-ribbons/)    3. 上边两个网站自己选一个喜欢的复制代码    4. 然后粘贴刚才复制的代码到themes/next/layout/_layout.swig文件中(放在**&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;**的下面)，并把href标签改为你的github地址```&lt;a href=&quot;https://github.com/ctrl-```13. 点击出现心的效果    1. </code></pre><p>!function(e,t,a){function n(){c(“.heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: ‘’;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}”),o(),r()}function r(){for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y–,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=”left:”+d[e].x+”px;top:”+d[e].y+”px;opacity:”+d[e].alpha+”;transform:scale(“+d[e].scale+”,”+d[e].scale+”) rotate(45deg);background:”+d[e].color+”;z-index:99999”);requestAnimationFrame(r)}function o(){var t=”function”==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e){t&amp;&amp;t(),i(e)}}function i(e){var a=t.createElement(“div”);a.className=”heart”,d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(“style”);a.type=”text/css”;try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(“head”)[0].appendChild(a)}function s(){return”rgb(“+<del>(255*Math.random())+”,”+</del>(255<em>Math.random())+”,”+~~(255</em>Math.random())+”)”}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);</p><pre><code>    2. 创建一个文件保存上术文字（click.js)将他保存在**D:\hexos\themes\next\source\js**里    3. XXX:\hexos\themes\next\layout里找到_layout.swig输入    ``` &lt;script type=&quot;text/javascript&quot; src=&quot;/js/click.js&quot;&gt;&lt;/script&gt;`（添加在末尾&lt;body&gt;上边即可）```14. 设置页面动态图    1.``` git clone https://github.com/theme-next/theme-next-canvas-nest themes/next/source/lib/canvas-nest```    2. 主题配置搜索canvas_nest    3. canvas_nest: false改成```canvas_nest: true```15. 设置排版    1. 搜索Schemes    2. 将4个中的你喜欢的那个去掉#即可16. 阅读进度    1. 搜索back2top    2. 将```scrollpercent: true```17. 添加与用户交流    1. 注册[DaoVoice](http://www.daovoice.io/)    2. 修改的hexo的文件路劲如下: /themes/next/layout/_partials/head/head.swig 末尾添加下面的代码:</code></pre><pre><code>    3. 在Next主题的配置文件博客/themes/next/_config.yml末尾中添加用户ID:</code></pre><p>daovoice: true<br>daovoice_app_id: 用户ID</p><pre><code>18. 添加百度统计    1. [注册](https://tongji.baidu.com)    2. 点击管理-代码管理-代码获取    3. 找到这部分    ```hm.src = &quot;https://hm.baidu.com/hm.js?你的唯一ID&quot;;```    4. 复制`ID`    5. 打开hexo站点根目录\themes\next\_config.yml路径下的next配置文件，然后搜索Baidu Analytics ID，找到如下配置项：```# Baidu Analytics IDbaidu_analytics: 你的ID```    5. 可以验证一下进入管理-代码安全检查-加入自己的博客网站-然后开始检测（搭建20分钟后后效，不好使别急）</code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git快捷键输入Shift+Insert </tag>
            
            <tag> git可以上下选择以前输入过的 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
